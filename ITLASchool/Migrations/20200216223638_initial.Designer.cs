// <auto-generated />
using ITLASchool.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITLASchool.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200216223638_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ITLASchool.Models.Asignaturas", b =>
                {
                    b.Property<int>("AsignaturasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeAsignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AsignaturasID");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("ITLASchool.Models.AsignaturasEstudiantes", b =>
                {
                    b.Property<int>("AsignaturasEstudiantesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsignaturasID")
                        .HasColumnType("int");

                    b.Property<int>("EstudiantesID")
                        .HasColumnType("int");

                    b.HasKey("AsignaturasEstudiantesID");

                    b.HasIndex("AsignaturasID");

                    b.HasIndex("EstudiantesID");

                    b.ToTable("AsignaturasEstudiantes");
                });

            modelBuilder.Entity("ITLASchool.Models.AsignaturasMaestros", b =>
                {
                    b.Property<int>("AsignaturasMaestrosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsignaturasID")
                        .HasColumnType("int");

                    b.Property<int>("ProfesoresID")
                        .HasColumnType("int");

                    b.HasKey("AsignaturasMaestrosID");

                    b.HasIndex("AsignaturasID");

                    b.HasIndex("ProfesoresID");

                    b.ToTable("AsignaturasMaestros");
                });

            modelBuilder.Entity("ITLASchool.Models.Estudiantes", b =>
                {
                    b.Property<int>("EstudiantesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudiantesID");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("ITLASchool.Models.Profesores", b =>
                {
                    b.Property<int>("ProfesoresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfesoresID");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("ITLASchool.Models.AsignaturasEstudiantes", b =>
                {
                    b.HasOne("ITLASchool.Models.Asignaturas", "Asignaturas")
                        .WithMany("AsignaturasEstudiantes")
                        .HasForeignKey("AsignaturasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITLASchool.Models.Estudiantes", "Estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudiantesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ITLASchool.Models.AsignaturasMaestros", b =>
                {
                    b.HasOne("ITLASchool.Models.Asignaturas", "Asignaturas")
                        .WithMany("AsignaturasMaestros")
                        .HasForeignKey("AsignaturasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITLASchool.Models.Profesores", "Profesores")
                        .WithMany("AsignaturasMaestros")
                        .HasForeignKey("ProfesoresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
